{{- define "common.deployment.tpl" -}}
{{ include "common.deployment.head" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- with (include "common.registry-pull-secrets" .) }}
      imagePullSecrets:
        {{- . | nindent 8 }}
      {{- end }}
      {{- if or .Values.postgresql.enabled .Values.extraInitContainers }}
      initContainers:
        {{- if .Values.postgresql.enabled }}
          - name: pgchecker
            image: "{{ .Values.pgchecker.image.repository }}:{{ .Values.pgchecker.image.tag }}"
            imagePullPolicy: {{ .Values.pgchecker.image.pullPolicy }}
            securityContext:
              {{- toYaml .Values.pgchecker.securityContext | nindent 14 }}
            command:
              - sh
              - -c
              - |
                echo 'Waiting for PostgreSQL to become ready...'

                until printf "." && nc -z -w 2 {{ include "common.postgresql.fullname" . }} {{ .Values.postgresql.port }}; do
                    sleep 2;
                done;

                echo 'PostgreSQL OK âœ“'
            resources:
              {{- toYaml .Values.pgchecker.resources | nindent 14 }}
        {{- end }}
        {{- with .Values.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end -}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: JAVA_OPTS
              value: "-Xmx{{ .Values.javaOpts.xmx }} -Xms{{ .Values.javaOpts.xms }} {{ .Values.javaOpts.other}}"
            - name: SPRING_APPLICATION_NAME
              value: {{ .Values.service.name | default (include "common.fullname" .) }}
            {{- if .Values.rabbitmq.enabled -}}
  {{/*          - name: SPRING_RABBITMQ_HOST*/}}
  {{/*            value: {{ .Values.rabbitmq.host | default (tpl "{{ .Release.Name }}-rabbitmq" .) }}*/}}
            - name: SPRING_RABBITMQ_USERNAME
              value: {{ .Values.rabbitmq.username }}
            - name: SPRING_RABBITMQ_PASSWORD
              value: {{ .Values.rabbitmq.password }}
            {{- end }}

            {{- if include "common.keycloak-enabled" . }}
            - name: ACT_KEYCLOAK_URL
              value: {{ include "common.keycloak-url" . }}
            {{- with include "common.keycloak-realm" . }}
            - name: ACT_KEYCLOAK_REALM
              value: {{ . }}
            {{- end }}
            {{- with include "common.keycloak-resource" . }}
            - name: ACT_KEYCLOAK_RESOURCE
              value: {{ . }}
            {{- end }}
            {{- end }}

            {{- if or .Values.db.uri .Values.postgresql.enabled }}
  {{/*          - name: SPRING_DATASOURCE_URL*/}}
  {{/*            value: ""*/}}
  {{/*            value: {{ .Values.db.uri | default (tpl "jdbc:postgresql://{{ include \"common.postgresql.fullname\" . }}:{{ .Values.postgresql.port }}/postgres" .) }}*/}}
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: {{ .Values.db.driver }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.db.username }}
            - name: SPRING_DATASOURCE_PASSWORD
            {{- if .Values.db.password }}
              value: {{ .Values.db.password | quote }}
            {{- else if .Values.postgresql.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.postgresql.fullname" . }}
                  key: postgresql-password
            {{- else }}
              value: ""
            {{- end }}
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: {{ .Values.db.platform }}
            - name: SPRING_JPA_GENERATE_DDL
              value: {{ .Values.db.generateDdl | quote }}
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: {{ .Values.db.ddlAuto }}
            {{- end }}
            {{ include "common.extra-env" . | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          {{ include "common.probes.tpl" . | nindent 10}}
          {{- with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
            {{ tpl . $ | nindent 12 }}
          {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- with .Values.extraVolumes }}
      volumes:
        {{ tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
{{- define "common.deployment" -}}
{{- template "common.util.merge" (append . "common.deployment.tpl") -}}
{{- end -}}
