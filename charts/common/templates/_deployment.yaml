{{- define "common.deployment.tpl" -}}
{{ include "common.deployment.head" . }}
{{/* magic one-liner to get values merged from common and chart */}}
{{- $values := index (merge (omit . "Values") (dict "Values" (omit .Values "common")) (dict "Values" .Values.common)) "Values" -}}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- with (include "common.registry-pull-secrets" .) }}
      imagePullSecrets:
        {{- . | nindent 8 }}
      {{- end }}
      {{- if or $values.postgresql.enabled $values.extraInitContainers }}
      initContainers:
        {{- if $values.postgresql.enabled }}
        - name: pgchecker
          image: "{{ $values.pgchecker.image.repository }}:{{ $values.pgchecker.image.tag }}"
          imagePullPolicy: {{ $values.pgchecker.image.pullPolicy }}
          securityContext:
          {{- toYaml $values.pgchecker.securityContext | nindent 12 }}
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'

              until printf "." && nc -z -w 2 {{ include "common.postgresql.fullname" . }} {{ $values.postgresql.port }}; do
                  sleep 2;
              done;

              echo 'PostgreSQL OK âœ“'
          resources:
            {{- toYaml $values.pgchecker.resources | nindent 12 }}
        {{- end }}
        {{- with $values.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- end -}}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml $values.securityContext | nindent 12 }}
        image: "{{ $values.image.repository }}:{{ $values.image.tag }}"
        imagePullPolicy: {{ $values.image.pullPolicy }}
        env:
        - name: JAVA_OPTS
          value: "-Xmx{{ $values.javaOpts.xmx }} -Xms{{ $values.javaOpts.xms }} {{ $values.javaOpts.other}}"
        - name: SPRING_APPLICATION_NAME
        {{- if $values.service.name }}
          value: {{ $values.service.name }}
        {{- else }}
          value: {{ template "fullname" . }}
        {{- end }}
        {{- if $values.rabbitmq.enabled -}}
        - name: SPRING_RABBITMQ_HOST
        {{- if $values.rabbitmq.host }}
          value: {{ $values.rabbitmq.host }}
        {{- else }}
          value: {{ .Release.Name }}-rabbitmq
        {{- end }}
        - name: SPRING_RABBITMQ_USERNAME
          value: {{ $values.rabbitmq.username }}
        - name: SPRING_RABBITMQ_PASSWORD
          value: {{ $values.rabbitmq.password }}
        {{- end }}
        {{- if include "common.keycloak-enabled" $ }}
        - name: ACT_KEYCLOAK_URL
          value: {{ include "common.keycloak-url" $ | quote }}
        {{- if include "common.keycloak-realm" . }}
        - name: ACT_KEYCLOAK_REALM
          value: {{ include "common.keycloak-realm" . | quote }}
        {{- end }}
        {{- if include "common.keycloak-resource" .  }}
        - name: ACT_KEYCLOAK_RESOURCE
          value: {{ include "common.keycloak-resource" . | quote }}
        {{- end }}
        {{- end }}
        {{- if $values.postgresql.enabled }}
        - name: SPRING_DATASOURCE_URL
        {{- if $values.postgresql.uri }}
          value: {{ $values.postgresql.uri | quote }}
          {{- else }}
          value: "jdbc:postgresql://{{ include "common.postgresql.fullname" . }}:{{ $values.postgresql.port }}/postgres"
        {{- end }}
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: {{ default "org.postgresql.Driver" $values.postgresql.driver | quote }}
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ default "postgres" $values.postgresql.username | quote }}
        - name: SPRING_DATASOURCE_PASSWORD
        {{- if $values.postgresql.password }}
          value: {{ $values.postgresql.password | quote }}
        {{- else }}
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-{{ $values.postgresql.name }}
              key: postgresql-password
        {{- end }}
        - name: SPRING_JPA_DATABASE_PLATFORM
          value: {{ default "org.hibernate.dialect.PostgreSQLDialect" $values.postgresql.platform | quote }}
        - name: SPRING_JPA_GENERATE_DDL
          value: {{ default  "true"  $values.postgresql.generateDdl | quote }}
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: {{ default "update" $values.postgresql.ddlAuto | quote}}
        {{- else }}
        {{- with $values.db.uri }}
        - name: SPRING_DATASOURCE_URL
          value: {{ . | quote }}
        {{- end }}
        {{- with $values.db.driver }}
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: {{ . | quote }}
        {{- end }}
        {{- with $values.db.username }}
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ . | quote }}
        {{- end }}
        {{- with $values.db.password}}
        - name: SPRING_DATASOURCE_PASSWORD
          value: {{ . | quote }}
        {{- end }}
        {{- with $values.db.platform }}
        - name: SPRING_JPA_DATABASE_PLATFORM
          value: {{ . | quote }}
        {{- end }}
        {{- with $values.db.generateDdl }}
        - name: SPRING_JPA_GENERATE_DDL
          value: {{ . | quote }}
        {{- end }}
        {{- with $values.db.ddlAuto }}
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: {{ default "update" . | quote }}
        {{- end }}
        {{- end }}
        {{ include "common.extra-env" . | nindent 8 }}
        ports:
        - containerPort: {{ $values.service.internalPort }}
        {{ include "common.probes.tpl" . | nindent 8}}
        {{- with $values.resources }}
        resources:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with $values.extraVolumeMounts }}
        volumeMounts:
          {{ tpl . $ | nindent 10 }}
        {{- end }}
      {{- with $values.extraVolumes }}
      securityContext:
        {{- toYaml $values.podSecurityContext | nindent 8 }}
      volumes:
        {{ tpl . $ | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ $values.terminationGracePeriodSeconds }}
      {{- with $values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
{{- define "common.deployment" -}}
{{- template "common.util.merge" (append . "common.deployment.tpl") -}}
{{- end -}}
