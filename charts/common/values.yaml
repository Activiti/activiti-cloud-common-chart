# common values shared between all charts

global:
  gateway:
    # global.gateway.domain -- configure default domain for gateway host, i.e. "{{ .Release.Name }}.127.0.0.1.nip.io"
    domain: ""
    # global.gateway.host -- configure default gateway host Helm template, i.e. "gateway.{{ .Values.global.gateway.domain }}"
    host: ""
    # global.gateway.http -- toggle creating http or https ingress rules, supports literal or boolean values
    http: true
    # global.gateway.tlsacme -- used to enable automatic TLS for ingress if http is false
    tlsacme: false

  keycloak:
    enabled: true
    # global.keycloak.url -- overrides gateway host configuration
    url: ""
    # global.keycloak.path -- configure default keycloak path
    path: "/auth"
    # global.keycloak.host -- configure default keycloak host template, i.e "identity.{{ .Values.global.gateway.domain }}"
    host: ""
    # global.keycloak.realm -- configure default Keycloak realm
    realm: "activiti"
    # global.keycloak.resource -- configure default Keycloak resource
    resource: "activiti"
    # global.keycloak.client -- obsolete, same as global.keycloak.resource
    client: "activiti"
    # global.keycloak.extraEnv -- adds Keycloak extraEnv to deployments
    extraEnv: ""

  # global.registryPullSecrets -- configure pull secrets for all deployments
  registryPullSecrets: []

  # global.extraEnv -- adds global extraEnv to deployments
  extraEnv: ""

  rabbitmq:
    host: ""
    username: guest
    password: guest

  postgresql:
    name: postgresql
    port: 5432
    username: postgres
    password:

# extraEnv -- adds extraEnv to deployments
extraEnv: ""

# enabled -- generate resources only if true, false by default so you can just use the partials
enabled: false

# replicaCount -- number of replicas
replicaCount: 1

# extraInitContainers -- adds extraInitContainers to deployments
extraInitContainers: ""

pgchecker:
  image:
    # pgchecker.image.repository -- Docker image used to check Postgresql readiness at startup
    repository: docker.io/busybox
    # pgchecker.image.tag -- Image tag for the pgchecker image
    tag: 1.32
    # pgchecker.image.pullPolicy -- Image pull policy for the pgchecker image
    pullPolicy: IfNotPresent
  # pgchecker.securityContext -- SecurityContext for the pgchecker container
  securityContext:
    allowPrivilegeEscalation: false
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  # pgchecker.resources -- Resource requests and limits for the pgchecker container
  resources:
    requests:
      cpu: "10m"
      memory: "16Mi"
    limits:
      cpu: "10m"
      memory: "16Mi"

image:
  repository: activiti/replaceme
  tag: 0.0.0+REPLACEME
  pullPolicy: IfNotPresent

# registryPullSecrets -- configures additional pull secrets for this deployment
registryPullSecrets: []

postgresql:
  enabled: false
  name: postgresql
  port: 5432

db:
  uri:
  username: postgres
  password:
  driver: org.postgresql.Driver
  platform: org.hibernate.dialect.PostgreSQLDialect
  generateDdl: false
  ddlAuto: validate

rabbitmq:
  enabled: false
  host: ""
  username: guest
  password: guest

javaOpts:
  xmx: 1024m
  xms: 256m
  other: |-
    -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true
    -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90

# probePath -- set default probe path for both liveness and readiness
# @default empty, each service should provide its own value or template, i.e. '{{ tpl .Values.ingress.path . }}/actuator/info'
probePath:
livenessProbe:
  # livenessProbe.path -- set liveness probe path, each service should provide its own value or default
  # @default empty, each service should provide its own value or template or default probePath
  path:
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 4
  failureThreshold: 4
  successThreshold: 1
readinessProbe:
  # readinessProbe.path -- set readiness probe path, each service should provide its own value or default
  # @default empty, each service should provide its own value or template or default probePath
  path:
  initialDelaySeconds: 20
  periodSeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 4
terminationGracePeriodSeconds: 20

service:
  name:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  nodePort:
  annotations: {}

ingress:
  # ingress.enabled -- set to false to disable ingress record generation
  enabled: true
  # ingress.tls -- set to true in order to enable TLS on the ingress record
  tls:
  # ingress.path -- set ingress path
  # @default empty, each ingress should provide its own value or template
  path:
  # ingress.subPaths -- set multiple ingress subpaths
  subPaths: []
  # ingress.tlsSecret -- if tls is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret:
  # ingress.hostName -- if set, overrides .Values.global.gateway.host configuration
  hostName:
  # ingress.annotations -- configure ingress annotations as key:value pairs
  annotations: {}

# resources -- configure resources requests and limits for deployment
resources: {}

#  limits:
#    cpu: 1
#    memory: 1024Mi
#  requests:
#    cpu: 150m
#    memory: 256Mi

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

# nodeSelector -- allows customising nodeSelector
nodeSelector: {}

# tolerations -- allows customising tolerations
tolerations: []

# affinity -- allows customising affinity
affinity: {}

# extraVolumes -- add additional volumes
extraVolumes: |

# extraVolumeMounts -- add additional volume mounts
extraVolumeMounts: |
