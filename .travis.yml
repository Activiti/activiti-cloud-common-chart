language: minimal
branches:
   only:
     - master 
env:
  global:
    - ORG='activiti'
    - APP_NAME='activiti-cloud-full-example'
    - GITHUB_CHARTS_REPO="https://github.com/Activiti/activiti-cloud-helm-charts.git"
    - GITHUB_HELM_REPO_URL="https://activiti.github.io/activiti-cloud-helm-charts/"
    - HELM_VERSION=2.12.3
    - HELM_REPO_BASE_URL=https://kubernetes-charts.alfresco.com
    - HELM_REPO=stable 
    - KUBERNETES_VERSION=1.14.8
    - TRAVIS_WAIT_TIMEOUT=${TRAVIS_WAIT_TIMEOUT:-180}
    - GIT_EMAIL="build_user@alfresco.com"
    
before_install: |

  echo -e "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
  git config --global user.email "${GIT_EMAIL}"
  echo TRAVIS_PULL_REQUEST_BRANCH=$(TRAVIS_PULL_REQUEST_BRANCH)
  echo TRAVIS_BRANCH=$(TRAVIS_BRANCH)
  curl -Ls https://github.com/jenkins-x/jx-release-version/releases/download/v1.0.24/jx-release-version_1.0.24_linux_amd64.tar.gz|  tar xvz -C .
  sudo cp jx-release-version /usr/bin/jx-release-version
  echo $(jx-release-version) > VERSION
  export VERSION=$(cat VERSION)
  export PREVIEW_NAMESPACE=$(echo "$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER"|  tr '[:upper:]' '[:lower:]'|tr . -)
  echo -e "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
  echo -e "http://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
  curl -s https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar zx
  sudo mv linux-amd64/helm /usr/local/bin/
  curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl &&
  chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  kubectl config set-cluster default-cluster --server=${K8S_API_URL} &&
  kubectl config set-credentials default-admin --token=${K8S_API_TOKEN} &&
  kubectl config set-context default-system --cluster=default-cluster --user=default-admin &&
  kubectl config use-context default-system

stages:
- name: build
- name: tag_updatebot
  if: type != pull_request

install: true

jobs:
  include:
    - name: build helm
      stage: build
      script: 
        - cd ./charts/common
        - make build|| travis_terminate 1;

    - name: tag_updatebot
      stage: tag_updatebot
      script:
        - cd ./charts/common
        - make version || travis_terminate 1;
        - make tag || travis_terminate 1;
        - make release || travis_terminate 1;
        - make github || travis_terminate 1;
        - make updatebot/push-version|| travis_terminate 1;
